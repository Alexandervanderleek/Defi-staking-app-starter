{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Desktop\\\\blockchainstuff\\\\EthDevTut1\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Desktop\\\\blockchainstuff\\\\EthDevTut1\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Desktop\\\\blockchainstuff\\\\EthDevTut1\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Desktop\\\\blockchainstuff\\\\EthDevTut1\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Desktop\\\\blockchainstuff\\\\EthDevTut1\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Desktop\\\\blockchainstuff\\\\EthDevTut1\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Desktop\\\\blockchainstuff\\\\EthDevTut1\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Desktop\\\\blockchainstuff\\\\EthDevTut1\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\src\\\\components\\\\App.js\";\n//main application where render everything core output (mothership)\nimport React, { Component } from \"react\";\nimport './App.css';\nimport Navbar from \"./Navbar\";\nimport Web3 from \"web3\";\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function () {\n      var _UNSAFE_componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function UNSAFE_componentWillMount() {\n        return _UNSAFE_componentWillMount.apply(this, arguments);\n      }\n\n      return UNSAFE_componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!Window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3.apply(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('no eth browser detected, lookup meta mask');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var web3, account;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                account = _context3.sent;\n                console.log(account);\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }() //props part of react allow to parse over info\n\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: '0x0'\n    };\n    return _this;\n  } // we parse the this.state.account to navbar\n  //react code goes in here \n\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return (\n        /*#__PURE__*/\n        //divs are just containers that can include styles, e.g text-centre comes from bootstrap\n        React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Navbar, {\n          account: this.state.account,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"text-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }\n        })))\n      );\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App; //class name invokes bootstrap styles seen in index.js\n\n/*   this way only the first hello world would be styled\r\n<div>\r\n<div className='text-center' style={{\r\n    color:'green',\r\n    fontSize: '30px'\r\n    }}> \r\n    <h> Hello, world!</h>\r\n</div>\r\n<div>\r\n    hello\r\n</div>\r\n</div>\r\n)\r\n\r\nthis way everthing gets that style\r\n<div style={{\r\n                color:'green',\r\n                fontSize: '30px' }}>\r\n                <div className='text-center'>\r\n                    <h> Hello, world!</h>\r\n                </div>\r\n                    <div>\r\n                        hello\r\n                    </div>\r\n            </div>\r\n*/","map":{"version":3,"sources":["C:/Users/Admin/OneDrive/Desktop/blockchainstuff/EthDevTut1/defi-staking-app-starter/defi-staking-app-starter/src/components/App.js"],"names":["React","Component","Navbar","Web3","App","loadWeb3","loadBlockchainData","Window","ethereum","window","web3","apply","enable","currentProvider","alert","eth","getAccounts","account","console","log","props","state"],"mappings":";;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,MAAjB;;IAEMC,G;;;;;;;;;;;;uBAGQ,KAAKC,QAAL,E;;;;uBACA,KAAKC,kBAAL,E;;;;;;;;;;;;;;;;;;;;;;;;qBAIHC,MAAM,CAACC,Q;;;;;AACNC,gBAAAA,MAAM,CAACC,IAAP,GAAc,IAAIP,IAAI,CAACQ,KAAT,CAAeF,MAAM,CAACD,QAAtB,CAAd;;uBACMC,MAAM,CAACD,QAAP,CAAgBI,MAAhB,E;;;;;;;AACH,oBAAGH,MAAM,CAACC,IAAV,EAAgB;AACnBD,kBAAAA,MAAM,CAACC,IAAP,GAAc,IAAIP,IAAJ,CAASM,MAAM,CAACC,IAAP,CAAYG,eAArB,CAAd;AACC,iBAFE,MAEE;AACDJ,kBAAAA,MAAM,CAACK,KAAP,CAAa,2CAAb;AACH;;;;;;;;;;;;;;;;;;;;;;;;;AAICJ,gBAAAA,I,GAAOD,MAAM,CAACC,I;;uBACEA,IAAI,CAACK,GAAL,CAASC,WAAT,E;;;AAAhBC,gBAAAA,O;AACNC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;;;;;;;;;;;;;;QAGJ;;;;AACA,eAAYG,KAAZ,EAAkB;AAAA;;AAAA;;AACd,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTJ,MAAAA,OAAO,EAAE;AADA,KAAb;AAFc;AAKjB,G,CAGD;AACA;;;;;6BACQ;AACJ;AAAA;AAAS;AACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,MAAD;AAAQ,UAAA,OAAO,EAAI,KAAKI,KAAL,CAAWJ,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,eAEI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAFJ;AADJ;AAQH;;;;EA5CahB,S;;AAiDlB,eAAeG,GAAf,C,CAGA;;AAEA","sourcesContent":["//main application where render everything core output (mothership)\r\nimport React, {Component} from \"react\";\r\nimport './App.css';\r\nimport Navbar from \"./Navbar\";\r\nimport Web3 from \"web3\";\r\n\r\nclass App extends Component{\r\n\r\n    async UNSAFE_componentWillMount(){\r\n        await this.loadWeb3()\r\n        await this.loadBlockchainData()\r\n    }\r\n\r\n    async loadWeb3(){// check that eth open , aka the metamask is open\r\n        if(Window.ethereum){\r\n            window.web3 = new Web3.apply(window.ethereum)\r\n            await window.ethereum.enable()\r\n        } else if(window.web3) {\r\n            window.web3 = new Web3(window.web3.currentProvider)\r\n            }else{\r\n                window.alert('no eth browser detected, lookup meta mask')\r\n            }\r\n        }\r\n    \r\n    async loadBlockchainData(){\r\n        const web3 = window.web3\r\n        const account = await web3.eth.getAccounts()\r\n        console.log(account)\r\n    } \r\n    \r\n    //props part of react allow to parse over info\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            account: '0x0'\r\n        }\r\n    }\r\n\r\n\r\n    // we parse the this.state.account to navbar\r\n    //react code goes in here \r\n    render(){\r\n        return(  //divs are just containers that can include styles, e.g text-centre comes from bootstrap\r\n            <div>\r\n                <Navbar account = {this.state.account}/>\r\n                <div className='text-center'>\r\n                    <h1></h1>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n//class name invokes bootstrap styles seen in index.js\r\n\r\n/*   this way only the first hello world would be styled\r\n<div>\r\n<div className='text-center' style={{\r\n    color:'green',\r\n    fontSize: '30px'\r\n    }}> \r\n    <h> Hello, world!</h>\r\n</div>\r\n<div>\r\n    hello\r\n</div>\r\n</div>\r\n)\r\n\r\nthis way everthing gets that style\r\n<div style={{\r\n                color:'green',\r\n                fontSize: '30px' }}>\r\n                <div className='text-center'>\r\n                    <h> Hello, world!</h>\r\n                </div>\r\n                    <div>\r\n                        hello\r\n                    </div>\r\n            </div>\r\n*/"]},"metadata":{},"sourceType":"module"}